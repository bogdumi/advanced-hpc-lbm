Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

Compiler options: -std=c99 -Wall -fast -march=broadwell -restrict -qopt-report=5 -qopt-report-phase=vec -qopenmp -lm -o d2q9-bgk

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(170,3)
   remark #15523: loop was not vectorized: loop control variable tt was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at d2q9-bgk.c(437,27) inlined into d2q9-bgk.c(175,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(428,5) inlined into d2q9-bgk.c(175,19)
      remark #15388: vectorization support: reference cells[c] has aligned access   [ d2q9-bgk.c(437,27) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,49) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,93) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,71) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,137) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,159) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,115) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,181) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,203) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,22) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,44) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,66) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,89) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,111) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,133) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,22) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,44) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,66) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,89) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,111) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,133) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.065
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 20 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 123 
      remark #15477: vector cost: 42.370 
      remark #15478: estimated potential speedup: 2.820 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(428,5) inlined into d2q9-bgk.c(175,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(389,3) inlined into d2q9-bgk.c(212,3)
   remark #15388: vectorization support: reference cells->speeds1[c] has aligned access   [ d2q9-bgk.c(400,7) ]
   remark #15388: vectorization support: reference cells->speeds1[c] has aligned access   [ d2q9-bgk.c(400,7) ]
   remark #15388: vectorization support: reference cells->speeds5[c] has aligned access   [ d2q9-bgk.c(401,7) ]
   remark #15388: vectorization support: reference cells->speeds5[c] has aligned access   [ d2q9-bgk.c(401,7) ]
   remark #15388: vectorization support: reference cells->speeds8[c] has aligned access   [ d2q9-bgk.c(402,7) ]
   remark #15388: vectorization support: reference cells->speeds8[c] has aligned access   [ d2q9-bgk.c(402,7) ]
   remark #15388: vectorization support: reference cells->speeds3[c] has aligned access   [ d2q9-bgk.c(404,7) ]
   remark #15388: vectorization support: reference cells->speeds3[c] has aligned access   [ d2q9-bgk.c(404,7) ]
   remark #15388: vectorization support: reference cells->speeds6[c] has aligned access   [ d2q9-bgk.c(405,7) ]
   remark #15388: vectorization support: reference cells->speeds6[c] has aligned access   [ d2q9-bgk.c(405,7) ]
   remark #15388: vectorization support: reference cells->speeds7[c] has aligned access   [ d2q9-bgk.c(406,7) ]
   remark #15388: vectorization support: reference cells->speeds7[c] has aligned access   [ d2q9-bgk.c(406,7) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 0.130
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 10 
   remark #15455: masked aligned unit stride stores: 6 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 8.620 
   remark #15478: estimated potential speedup: 2.270 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at d2q9-bgk.c(350,61)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(240,5)
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(251,7) ]
      remark #15388: vectorization support: reference cells->speeds0[ii+jj*?] has aligned access   [ d2q9-bgk.c(251,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(252,7) ]
      remark #15388: vectorization support: reference cells->speeds1[x_w+jj*?] has aligned access   [ d2q9-bgk.c(252,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(253,7) ]
      remark #15388: vectorization support: reference cells->speeds2[ii+y_s*?] has aligned access   [ d2q9-bgk.c(253,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(254,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(255,7) ]
      remark #15388: vectorization support: reference cells->speeds4[ii+y_n*?] has aligned access   [ d2q9-bgk.c(255,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(256,7) ]
      remark #15388: vectorization support: reference cells->speeds5[x_w+y_s*?] has aligned access   [ d2q9-bgk.c(256,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(257,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(258,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(259,7) ]
      remark #15388: vectorization support: reference cells->speeds8[x_w+y_n*?] has aligned access   [ d2q9-bgk.c(259,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(266,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(267,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(268,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(269,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(270,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(271,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(272,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(273,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(275,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(293,27) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(294,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(295,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(296,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(297,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(298,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(299,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(300,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(301,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(304,22) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(305,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(306,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(307,24) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(308,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(309,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(312,22) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(313,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(314,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(315,24) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(316,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(317,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(275,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds3[x_e+jj*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(254,33) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds6[x_e+y_s*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(257,33) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds7[x_e+y_n*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(258,33) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.100
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 62 
      remark #15449: unmasked aligned unit stride stores: 26 
      remark #15462: unmasked indexed (or gather) loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 377 
      remark #15477: vector cost: 104.120 
      remark #15478: estimated potential speedup: 3.480 
      remark #15482: vectorized math library calls: 1 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(240,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(240,5)
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(251,7) ]
      remark #15388: vectorization support: reference cells->speeds0[ii+jj*?] has aligned access   [ d2q9-bgk.c(251,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(252,7) ]
      remark #15388: vectorization support: reference cells->speeds1[x_w+jj*?] has aligned access   [ d2q9-bgk.c(252,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(253,7) ]
      remark #15388: vectorization support: reference cells->speeds2[ii+y_s*?] has aligned access   [ d2q9-bgk.c(253,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(254,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(255,7) ]
      remark #15388: vectorization support: reference cells->speeds4[ii+y_n*?] has aligned access   [ d2q9-bgk.c(255,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(256,7) ]
      remark #15388: vectorization support: reference cells->speeds5[x_w+y_s*?] has aligned access   [ d2q9-bgk.c(256,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(257,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(258,7) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(259,7) ]
      remark #15388: vectorization support: reference cells->speeds8[x_w+y_n*?] has aligned access   [ d2q9-bgk.c(259,33) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(266,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(267,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(268,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(269,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(270,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(271,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(272,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(273,18) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(275,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(293,27) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(294,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(295,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(296,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(297,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(298,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(299,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(300,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(301,25) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(304,22) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(305,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(306,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(307,24) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(308,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(309,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(312,22) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(313,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(314,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(315,24) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(316,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(317,23) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds0[c] has aligned access   [ d2q9-bgk.c(350,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(351,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(352,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(353,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(354,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(355,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(356,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(357,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,35) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(358,88) ]
      remark #15388: vectorization support: reference tmp_cells->speeds1[c] has aligned access   [ d2q9-bgk.c(275,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds2[c] has aligned access   [ d2q9-bgk.c(276,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds3[c] has aligned access   [ d2q9-bgk.c(277,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds4[c] has aligned access   [ d2q9-bgk.c(278,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds5[c] has aligned access   [ d2q9-bgk.c(279,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds6[c] has aligned access   [ d2q9-bgk.c(280,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds7[c] has aligned access   [ d2q9-bgk.c(281,9) ]
      remark #15388: vectorization support: reference tmp_cells->speeds8[c] has aligned access   [ d2q9-bgk.c(282,9) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds3[x_e+jj*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(254,33) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds6[x_e+y_s*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(257,33) ]
      remark #15415: vectorization support: irregularly indexed load was generated for the variable <cells->speeds7[x_e+y_n*?]>, part of index is nonlinearly computed   [ d2q9-bgk.c(258,33) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.100
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 62 
      remark #15449: unmasked aligned unit stride stores: 26 
      remark #15462: unmasked indexed (or gather) loads: 3 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 377 
      remark #15477: vector cost: 104.120 
      remark #15478: estimated potential speedup: 3.480 
      remark #15482: vectorized math library calls: 1 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(240,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(423,3) inlined into d2q9-bgk.c(671,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(428,5) inlined into d2q9-bgk.c(671,10)
      remark #15388: vectorization support: reference cells[c] has aligned access   [ d2q9-bgk.c(437,27) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,49) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,93) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,71) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,137) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,159) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,115) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,181) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(437,203) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,22) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,44) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,66) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,89) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,111) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(440,133) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,22) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,44) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,66) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,89) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,111) ]
      remark #15388: vectorization support: reference *(local_density+c*4) has aligned access   [ d2q9-bgk.c(442,133) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.065
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 20 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 123 
      remark #15477: vector cost: 42.370 
      remark #15478: estimated potential speedup: 2.820 
      remark #15486: divides: 2 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(428,5) inlined into d2q9-bgk.c(671,10)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(707,3)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(737,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (737:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (737:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (737:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (737:7)

   LOOP BEGIN at d2q9-bgk.c(709,5)
      remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(737,7) ]
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(750,3)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(752,5) ]
LOOP END
===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at d2q9-bgk.c(618,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at d2q9-bgk.c(599,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(601,5)
   <Peeled loop for vectorization, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(601,5)
   <Distributed chunk1>
      remark #15389: vectorization support: reference *obstacles_ptr[ii+jj*params->nx] has unaligned access   [ d2q9-bgk.c(613,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 3.333
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.370 
      remark #15478: estimated potential speedup: 5.840 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(601,5)
   <Remainder loop for vectorization, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(601,5)
   <Distributed chunk2>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between *cells_ptr->speeds0[c] (604:9) and *cells_ptr->speeds8[c] (612:9)
      remark #15346: vector dependence: assumed OUTPUT dependence between *cells_ptr->speeds8[c] (612:9) and *cells_ptr->speeds0[c] (604:9)
   LOOP END
LOOP END
===========================================================================
